1、介绍FSM

状态（States）： 系统的所有可能状态的集合。每个状态表示系统在某一时刻的特定情况。状态可以是有限的，也可以是无限的。在有限状态机中，状态的数量是有限的。

转移条件（Transitions）： 描述系统从一个状态转移到另一个状态的条件。当满足某个条件时，系统就从当前状态转移到另一个状态。转移可以是确定性的，即根据特定的条件总是发生，也可以是非确定性的，即在满足条件时可能有多个转移路径。

动作（Actions）： 在状态转移发生时执行的动作或操作。这些动作可以改变系统的内部状态，产生输出，或触发其他事件。动作与状态之间的关系定义了系统的行为。

初始状态（Initial State）： 系统启动时的初始状态。有限状态机从初始状态开始执行。

终止状态（Final State）： 一个或多个表示系统已完成特定任务的状态。当系统进入终止状态时，它可能停止或重新回到初始状态，具体取决于应用的需求。

2、介绍分层FSM

状态层次结构： 状态可以被组织成层次结构，其中高级状态包含了一组低级状态。高级状态通常代表系统的整体行为，而低级状态则代表更具体、更细粒度的行为。这种层次结构使得状态机的设计更具有结构性和组织性。

状态的进入和退出动作： 在进入或退出状态时执行的动作。这些动作可以是系统初始化或清理的操作，用于确保在进入或退出状态时系统处于正确的状态。

状态的自循环： 一个状态可以包含自循环，表示系统在该状态内部可以持续执行某个动作或等待某个条件的满足。这有助于在更细节的层次上定义系统的内部行为。

状态的并发执行： 在分层有限状态机中，状态可以并发执行，即同时处于多个状态。这允许系统同时处理多个任务或事件，提高系统的响应性。

传递事件： 高级状态可以传递事件给其子状态，使得子状态可以独立响应事件。这种传递机制促进了模块化设计，每个状态只关注其自身的行为，而不需要关心整体系统的复杂性。

分层有限状态机的主要优势在于它提供了一种组织复杂系统行为的有效方式，使得系统更易于理解和维护。它特别适用于大型系统或需要处理多个并发任务的应用。

3、如何优化FSM

使用分层FSM

状态合并： 将相似的状态合并成一个更高级的状态，以减少状态的数量。这可以简化状态图，提高可读性，并减少状态转移的复杂性。然而，在进行状态合并时，需要确保合并后的状态仍然能够正确地捕获系统的行为。