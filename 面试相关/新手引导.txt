【1、如何触发新手引导？如何确定开始哪个新手引导，在这么多引导配置中？】
登陆游戏时向服务器请求消息，获得引导相关数据。然后一般情况下在每个UI界面(BaseUI类)打开时进行引导判断检查，这是一种引导开启入口
确定当前UI界面对应的是属于哪一个引导组的哪一个步骤。
//存储着下一个引导步骤的ID，如果为特殊值那就是当前全部引导都完成了，并且也存着下一个引导组开始的界面名字，
//每进入一个界面的时候就判断一下下一个引导步骤的ID值是否不为特殊值，如果不为特殊值的话再判断界面名字是否相等。
【2、如何进行新手回滚？】
新手引导分为N个组，每个组里有N个步骤，一般在每组的最后一个步骤里，会发送消息告诉服务器这一组引导被完成了，如果
没有进行到这一组的最后一个步骤时就掉线了话，再次打开游戏时并进入对应组的开始界面的话，会再次重复这一组里面的每个步骤，
如果引导组中间有些步骤是要跟服务器交互的，则有两种方法解决。
【3、如果一组几个步骤中，中间有几个步骤是要跟服务器交互的话该如何保证玩家在这里跟服务器交互过后掉线了不卡死？】
第一种方法：
在向服务器发送消息的基类中，判断如果当前处于引导状态中且并非该组引导的最后一个步骤，则不进行服务器消息发送，把传递数据的方法用委托存起来(用队列存)。
自己向存储数据的类中手动进行更新数据，也就是假数据。然后只在最后一步进行跟服务器交互告知服务器这组引导被完成之前，先执行存起来的委托把中间步骤的数据一起传给服务器，也可以服务器去更新要用到的数据。
这样在最后一步掉线前因为并没有真正跟服务器交互过，再次进入游戏时会从头再来一次各个步骤。

第二种方法：【可以在中间有交互的地方做个备选步骤，防止视觉效果奇怪。】用这个方式替换
在一组的几个需要跟服务器交互的步骤标记下、走到这里的时候除了普通的发送数据消耗材料金币数据之外，还要再发送一次告诉服务器这一个步骤被完成了
。如果此时后掉线了，后面还有几个步骤是跟这一步紧密相连，比如装备上一个装备，后面要用这个装备去开始一场战斗。这时掉线后再会到游戏的话，仍然会从每组的第一个界面
开始每个步骤的引导，不过会检查有跟服务器交互的步骤，如果已经被完成了，就跳过该步骤，防止卡死。这样的话只是会视觉上少了一些步骤，但是最为方便。
【4、如何实现强制玩家点击一个按钮、滑动条块】
利用UGUI中一个开启了RaycastTarget的物体在另一个物体上，能够阻挡对另一个物体的点击响应的特点。
构建一个空物体，这个空物体上面只有RectTransform组件，在这个空物体下放四个子物体(分为上下左右)，分别让左右子物体的
锚点贴紧父物体的左边距和右边距、并且锚点上下拉伸，以便跟随父物体的高度改变时，跟随高度改变。而上下子物体的宽度事先设置为超框屏幕宽度，
然后锚点贴紧上下边。从而实现当父物体的高度改变时，左右子物体会跟随高度变化，保证高度部分覆盖，父物体宽度改变时，因为上下子物体的宽度预设置的时候就是超出了屏幕
一大块区域，所以无论父物体宽度变化，上下子物体都能够覆盖。并且UGUI中的物体都是一个矩形区域，利用父物体进行匹配目标矩形区域的位置和宽高，实现父物体对准目标矩形区域进行
覆盖掉目标矩形区域，而它的四个子物体又通过锚点设置的原因进行自适应，实现这个矩形区域的上下左右部分都被子物体给覆盖遮挡。此时就营造出了一个镂空区域，使得客户端只能点击这个区域，
响应这个区域的UGUI射线检测。
【5、如何防止新手引导因为策划配置错误而导致的卡死】
数据验证： 在加载策划配置数据之前，进行严格的数据验证。确保数据的完整性、准确性和一致性。检查数据的格式、范围、关联关系等，以防止配置错误导致程序异常或卡死。

异常处理： 在程序中添加足够的异常处理机制，以便在发现配置数据错误时能够 gracefully 处理。例如，如果某个引导步骤的配置数据有误，可以记录错误日志、提示给开发人员，并选择跳过或采取默认值继续执行，而不是导致程序崩溃或卡死。

超时机制： 为每个新手引导步骤设置合理的超时机制，确保在一定时间内完成引导步骤。如果超过预定时间仍未完成，可以触发超时处理逻辑，例如自动跳过当前步骤或重新加载配置数据。

协程或异步操作： 使用协程或异步操作来执行新手引导步骤，以防止在执行某些配置数据依赖的长时间操作时阻塞主线程。这可以提高程序的响应性，即使配置数据出现问题，也能够更容易地中断或切换到其他任务。

监控和反馈： 在运行时，实时监控新手引导的执行情况，记录关键步骤的执行时间、状态等信息。这样可以及时发现潜在的配置问题，并通过反馈机制通知开发人员。

定期更新配置： 在游戏或应用的更新中，定期检查和更新新手引导的配置数据。确保策划配置数据与实际游戏逻辑的变化保持一致，避免因为配置数据与代码不匹配而导致问题。

测试和模拟： 在开发和测试阶段，使用模拟数据来测试新手引导流程，模拟各种异常情况，以确保程序能够正确处理配置错误并保持稳定。

通过采取这些预防措施，可以最大程度地减少因为策划配置数据错误而导致卡死的可能性，并在发生问题时提供良好的容错处理机制。

假设打开一个scroll list界面item，item名字要改一下，这样引导的时候就会根据名字能查找。高亮强制。列举选模型的时候

【6、除了UI界面入口驱动新手引导，还有哪些方式驱动引导开始】

问题：
1、如果循环列表只加载了几个，但是引导需要强制点击的是还没加载出来的该怎么办？()
在新手引导中实现如果查找的是循环列表中的物体，并且没加载出来时，强制ScrollRect自动滑动，让对应物体显示出来。

延迟操作: 在引导步骤中，添加一个延迟操作或等待机制，确保在目标节点加载完成后再进行引导步骤的下一步。
