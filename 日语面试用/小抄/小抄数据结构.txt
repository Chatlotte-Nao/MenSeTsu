1、数组
配列は論理的とメモリ上で隣接する要素の集合です、線形データ構造です。利点はランダムアクセスが速い、欠点はサイズが固定されます。
2、链表
リンクリストは論理的上で隣接するが、メモリ上では必ず隣接するではありません、線形構造です。利点はサイズが動的に拡張できます、欠点は要素をアクセスする際に先頭から遍歴(henreki)するしかない。
3、栈
先入れ後出しのデータ構造です
4、堆
ヒープは特殊な木構造で、主に最小ヒープと最大ヒープです。
最小ヒープのルートノードの値が最小、最大ヒープのルートノードの値がが最大。
5、队列
先入れ先出しのデータ構造です。
6、二叉树
ノードは最大で左右の2つの子ノードしか持てない木構造です。
7、二叉搜索树
左子ノードの値は親ノードより小さい、右子ノードは親ノードより大きい。
8、红黑树
赤黒木は自己バランス型の二分探索木です、二分探索木がリンクリストに変質するのを防ぎ(fusegi [0])、高効率の探索効率を保つことができます。
いくつかの特徴があります：
1、ノードは赤と黒ノードの一種しかない。
2、ルートノードは黒ノード。
3、葉ノードは黒nilノード。
4、任意のノードからその葉ノードまでのパス上に含まれる黒ノードの数はすべて同じです。
5、赤ノードの二つの子ノードは黒ノード
赤黒木の特徴を保つため、ノードの挿入と削除時には回転や色の変更を行う必要があります。