1、UGUI合批规则、Canvas渲染Mesh相关
假设Canvas下有四个Image、分别为u1、u2、u3、u4。
Unity首先会判断这四个物体的深度值、如果当前为隐藏状态的话，深度值为-1，然后按照在Canvas下的顺序进行深度值判断，
如果有物体的Mesh覆盖在一个物体的Mesh上的话，那么该物体的深度值会比被覆盖物体大一，然后会检测Canvas下的顺序相邻的物体的MaterialId和
TextureId是否相同，如果相同他们的深度值会设置为同一个值。最后得到一个待绘制合批的数组，如果深度值为-1的话不会被放进这个数组里，
按照深度值来进行一个Mesh一个Mesh的绘制，如果u1和u3的MaterialId和TextureId相同，但是u2与他们不相同的话，u2就会打断u1和u3的合批。
2、如何减少UGUI产生的DrawCall
减少可能会引起脏标记的操作，也就是尽量减少UI元素变化。
使用相同的Material，使用图集使得TextureID相同。注意Canvas下的子物体排序顺序，不要被中间的物体打断相邻物体的合批。
不使用SetActive进行隐藏，而使用改变坐标进行隐藏。动静分离、ui元素容易变化的放在一个Canvas下，不变化的放在另一个Canvas下。
减少Mask的使用，只是矩形遮罩的话使用RectMask2D。
3、UGUI部分源码分析
减少Layout相关组件的使用，layout组件计算布局的方式很耗费性能，
不要嵌套Layout组件使用，没有变化时可以把Layout组件禁用掉。

安卓图片压缩格式ETC2 4(不带透明通道) ECT2 8(带透明通道)，使用ETC格式必须保证图片大小是4的倍数，否则将会使用默认的RGBA 32
IOS的话是ASTC 8x8(不带透明通道)   法线贴图的话ASTC6X6

JPG有损压缩，PNG无损压缩，外面的图片到了Unity会被转换成纹理格式，因为PNG和JPG是无法直接被GPU使用。纹理格式是针对于GPU的图片格式，能直接被GPU读取。


为什么在安卓上用ETC，IOS用ASTC？
PC：推荐使用DXT1/5格式，因其兼容性广且在高质量和内存占用之间取得了良好平衡。
Android：推荐使用ETC2和ASTC格式，以保证在广泛设备上的兼容性，同时优化存储和性能。
iOS：推荐使用PVRTC格式来确保最佳性能和内存使用，同时可以考虑ASTC格式以提高图像质量。

打图集的基本规则:
尽量一个界面的元素打进一个图集、尽量打小图进去、大图单独不打图集就行。
公共图片图集常驻内存就行。


面试问题
做过什么UGUI系统：
无人机系统：对无人机的配件进行升级强化、以及装备在三个挂载配件格子上。
暗区主界面入口：选择进入暗区匹配开始或暗区选人界面、或者暗区商店界面
暗区上阵:这个界面会实现最多四个角色上阵，设置进入暗区的队长，点击模型后会通过Cinemachine播放一段从远处过渡到模型近距离的效果。
暗区上阵详细界面：近距离观察模型细节、下面有当前所拥有的角色，进行点击之后就会上阵或者替换。
暗区商店：商店可以进行道具售卖和购买，有4个商人NPC，对应有所喜好物品收购价格会变高，商人所拥有的的可购买道具也不同。然后可以进行道具的出售、显示的时候排序
暗区匹配：进行匹配玩家对战，实现转圈圈显示人数。
休息室入口：休息室分为角色的几个房间，左边列表显示角色的好感度，判断能否解锁进入房间。右边区域相机显示角色坐在床边的样子，播放对应模型动画。同样会操控Cinemachine来进行相机变换视角。
档案室系统：档案室入口、进行角色各语音的功能播放、以及角色的故事信息。

名片徽章系统：
成就系统：
十五日签到活动系统：

曙光试炼：
在这个界面上，实现代码控制特效飞到某个点上形成飞行轨迹，为了实现循环列表，手动控制进度条跟随拖拽移动。

UGUI控件拓展：
无限循环列表
不使用Unity自带的Button，自己实现UIButton、通过ipointclick，drag什么实现复合的长按、点击、拖拽、以及方便点击按钮时播放音效。
实现不依赖与Image的RayCast射线检测。

如何进行适配多个分辨率的？
一种方式。以1920X1080,16:9为基准，扩展到其他分辨率，比如2340X1080(最终游戏中的UICanvs画布比例设置为2340X1080)
在要求美术出效果图时，让他们出2340X1080，在基准分辨率下摆好UI位置按照效果图垫在背面调透明度，设置好锚点对齐方式，其中大部分UI元素都是整合在一个空物体下，这样只需要对空物体集合设置对齐方式，并使用写好的脚本进行左、右对齐时移动一定距离，这样能够保证在任何分辨率下左右两边都贴边并且间隔一定距离。然后就是居中对齐的话就是适配2340宽度，整体宽度适配放大，并且最多只放大到2340这个分辨率下。如果跟着Width无限拉长是会让里面的元素位置歪掉不可取。

pad适配



Image和RawImage

Image: 适用于大部分静态UI元素，如按钮、背景图、进度条等。尤其在需要利用Sprite的功能（如九宫格切割和填充模式）时，Image是首选。
RawImage: 适用于需要显示非Sprite图像的场景，如视频播放、显示摄像头画面、3D渲染纹理或其他需要直接操作纹理的情况。

Image: 接受的是Sprite类型的图像源。Sprite是Unity为2D游戏和UI设计的资源类型，包含了边界、九宫格切割、Pivot等信息，可以方便地在UI中进行九宫格拉伸、裁剪等操作。

RawImage: 接受的是Texture类型的图像源。RawImage可以直接使用2D纹理（Texture2D）、3D纹理（RenderTexture）、视频纹理等。它不会对纹理进行额外的处理，因此能更直接地显示纹理内容。

刘海屏如何适配。
获取到Screen.safeArea，不包含刘海屏的区域。
将安全区域转换为相对于屏幕尺寸的比例。
调整根节点CanvasRectTransform的anchorMin和anchorMax。



3D界面UI，结合模型。
实现3D模型头顶血条并保证相机旋转时，血条的朝向也跟着旋转：
使用Canvas的WorldSpace模式，放置在模型头顶上。并使其朝向相机。 



