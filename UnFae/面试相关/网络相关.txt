1、TCP和UDP
TCP（传输控制协议）：
连接导向：
TCP是面向连接的协议，通信双方在数据传输前需要先建立连接，然后再进行数据的传输。
可靠性：
提供可靠的数据传输服务，通过序号、确认和重传机制，确保数据的可靠性和完整性。
流控制：
支持流控制，通过滑动窗口机制调整发送方的发送速率，以防止接收方因处理不及时而导致的数据丢失。
拥塞控制：
具有拥塞控制机制，通过动态调整窗口大小和数据重传来避免网络拥塞。
有序性：
保证数据的有序传输，接收方按序接收和组装数据。
面向字节：
数据以字节流的形式进行传输，没有消息边界。
应用场景：
适用于要求可靠传输、顺序传输的应用，如文件传输、网页访问等。

UDP（用户数据报协议）：
无连接：
UDP是无连接的协议，通信双方不需要建立连接，可以直接发送数据。
不可靠性：
不提供可靠的数据传输服务，不保证数据的完整性和可靠性。丢失的数据不会被重传。
无流控制和拥塞控制：
不支持流控制和拥塞控制机制，数据发送和接收的速率由应用层自行控制。
无序性：
不保证数据的有序传输，接收方接收到的数据顺序可能与发送方不一致。
面向报文：
数据以报文的形式进行传输，有消息边界。
低延迟：
UDP具有低延迟特性，适用于对实时性要求较高的应用，如实时语音和视频传输。
应用场景：

适用于实时性要求较高、可以容忍一定数据丢失的应用，如在线游戏、实时音视频传输等。

KCP：
1. 高效性
KCP 使用了多种优化技术来确保数据传输的高效性。它采用了一种自适应的流控算法，可以根据网络状况动态调整数据发送速率，以最大限度地利用带宽。

2. 可靠性
KCP 在传输过程中使用了重传机制来确保数据的可靠性。当数据包在传输过程中丢失时，KCP 会自动进行重传，直到接收到确认信息为止。

3. 低延迟
与传统的 TCP 协议相比，KCP 在处理延迟方面表现得更好。它通过减少握手过程和使用快速重传机制来降低延迟，特别适合实时应用，如在线游戏和实时视频流。

4. 兼容性
KCP 可以在现有的 IP 网络上运行，不需要对现有的网络基础设施进行任何修改。它可以与 UDP（用户数据报协议）一起使用，以实现更高的传输效率。

5. 配置灵活
KCP 提供了多种配置选项，用户可以根据实际需求进行调整，以达到最佳的传输效果。例如，可以调整窗口大小、发送间隔、最大重传次数等参数。

2、帧同步和状态同步



